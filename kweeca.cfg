MEMORY {
    ZP:  start = $0002, size = $001A, type = rw, define = yes;
    LORAM: start = $07FF, size = $581, file = %O, define = yes, fill = yes;
	SPRITERAM: start = $d80, size = $40, define = yes, fill = yes;
    RAM: start = $dc0, size = $C240, file = %O, define = yes;
}
SEGMENTS {
    STARTUP:  load = LORAM, type = ro;
    LOWCODE:  load = LORAM, type = ro,               optional = yes;
    INIT:     load = LORAM, type = ro, define = yes, optional = yes;
    CODE:     load = RAM, type = ro;
    RODATA:   load = RAM, type = ro;
    SPRITES:   load = SPRITERAM, type = ro;
    DATA:     load = LORAM, type = rw;
    ZPSAVE:   load = LORAM, type = bss;
    BSS:      load = LORAM, type = bss, define = yes;
    # HEAP:     load = RAM, type = bss, optional = yes; # must sit just below stack
    ZEROPAGE: load = ZP,  type = zp;
}
FEATURES {
    CONDES: segment = INIT,
	    type = constructor,
	    label = __CONSTRUCTOR_TABLE__,
	    count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = destructor,
	    label = __DESTRUCTOR_TABLE__,
	    count = __DESTRUCTOR_COUNT__;
    CONDES: segment = RODATA,

	    type = interruptor,
	    label = __INTERRUPTOR_TABLE__,
	    count = __INTERRUPTOR_COUNT__;
}
SYMBOLS {
    __STACKSIZE__ = $800;	# 2K stack
}


